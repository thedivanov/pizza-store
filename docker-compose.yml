version: '3'

services:
  db:
    image: postgres
    restart: always
    networks:
      - pizza-net
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=pizza
    volumes:
      - ./postgres-data:/var/lib/postgresql
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d pizza'"]
      interval: 10s
      timeout: 3s
      retries: 3

  migrations:
    image: flyway/flyway
    command: -url=jdbc:postgresql://db:5432/pizza -user=postgres -password=pass -connectRetries=10 migrate info
    volumes:
    - ./migration:/flyway/sql
    networks:
      - pizza-net
    depends_on:
      db:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
        - 5672:5672
        - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
        - pizza-net

  shop:
    build:
      context: ./shop
      dockerfile: Dockerfile
    restart: always
    networks:
      - pizza-net
    environment:
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_ADDRESS=rabbitmq
      - RABBITMQ_PORT=5672
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=pizza
      - POSTGRES_ADDR=db
      - POSTGRES_PORT=5432
    ports:
      - 9010:9010
    depends_on:
      migrations:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy

  kitchen:
    build:
      context: ./kitchen
      dockerfile: Dockerfile
    restart: always
    networks:
      - pizza-net
    depends_on:
      migrations:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
      shop:
        condition: service_started
    environment:
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_ADDRESS=rabbitmq
      - RABBITMQ_PORT=5672
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=pizza
      - POSTGRES_ADDR=db
      - POSTGRES_PORT=5432
    ports:
      - 9020:9020

  delivery:
      build:
        context: ./delivery
        dockerfile: Dockerfile
      restart: always
      networks:
      - pizza-net
      ports:
        - 9030:9030
      depends_on:
        migrations:
          condition: service_completed_successfully
        rabbitmq:
          condition: service_healthy
        shop:
          condition: service_started
      environment:
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_ADDRESS=rabbitmq
      - RABBITMQ_PORT=5672
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=pizza
      - POSTGRES_ADDR=db
      - POSTGRES_PORT=5432

  swagger:
    build:
      context: ./swagger
      dockerfile: Dockerfile
    networks:
      - pizza-net
    ports:
      - "9080:8080"
    environment:
      - SWAGGER_JSON=/swagger.yml


networks:
  pizza-net:
    driver: bridge
